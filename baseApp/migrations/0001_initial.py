# Generated by Django 4.1.5 on 2023-02-13 20:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(max_length=7)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CollectionFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('prefix', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Pdo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('pdo_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SubPDO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_level', models.CharField(choices=[('1', 1), ('2', 2)], default='', max_length=20)),
                ('indicator', models.CharField(choices=[('1', 1), ('2', 2)], default='', max_length=20)),
                ('classification', models.CharField(choices=[('1', 1), ('2', 2)], default='', max_length=20)),
                ('measurement_unit', models.CharField(choices=[('1', 1), ('2', 2)], default='', max_length=20)),
                ('baseline', models.IntegerField(default=1)),
                ('baselineyear', models.DateField()),
                ('actual_to_date', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('end_target', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('perc_complete', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('detailed_data_src', models.CharField(blank=True, max_length=1000, null=True)),
                ('comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('pdo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subpdos', to='baseApp.pdo')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_num', models.IntegerField()),
                ('collection_freq', models.ManyToManyField(blank=True, related_name='project_year', to='baseApp.collectionfrequency')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('duration', models.IntegerField()),
                ('genPDO', models.CharField(max_length=1000)),
                ('created', models.DateField(auto_now_add=True)),
                ('collection_freq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='baseApp.collectionfrequency')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator', to=settings.AUTH_USER_MODEL)),
                ('reporters', models.ManyToManyField(blank=True, related_name='editing_projects', to=settings.AUTH_USER_MODEL)),
                ('years', models.ManyToManyField(blank=True, related_name='projects', to='baseApp.projectyear')),
            ],
        ),
        migrations.AddField(
            model_name='pdo',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdos', to='baseApp.project'),
        ),
        migrations.AddField(
            model_name='collectionfrequency',
            name='entries',
            field=models.ManyToManyField(blank=True, related_name='collection_freq', to='baseApp.entry'),
        ),
    ]
